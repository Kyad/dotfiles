# -*- mode: snippet -*-
# name: floyd
# key: floyd
# --
/**
 * Floyd-Warshall algorithm
 * 計算量 O(N^3)
 * distは以下のように初期化する。終了後にdist[i][j]にiからjへの距離の最小値が上書きされる。
 * distに負の重みがあっても負閉路がなければ利用可能。
 * vector<vector<long long> > dist(N, vector<long long>(N, INF));
 * for (int n = 0; n < N; n++) {
 *   dist[n][n] = 0;
 * }
 * for (int i = 0; i < N; i++) {
 *   for (int j = 0; j < N; j++) {
 *     dist[i][j] = iからjへの距離
 *   }
 * }
 */
const long long INF = 4e18;
void floyd(vector<vector<long long> > &dist) {
  int N = dist.size();
  for (int k = 0; k < N; k++) {
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (dist[i][k] == INF || dist[k][j] == INF) {  // 負の重み対策
          continue;
        }
        dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
      }
    }
  }
}
