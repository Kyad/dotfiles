# -*- mode: snippet -*-
# name: dfs_tree
# key: dfs_tree
# --
// 木DP。計算量O(N)。graphは有向でも無向でも良い
auto dfs_tree = [&](auto dfs_tree, int u, int parent) -> void {
  // uに最初に訪問した
  // uの初期化
  // child[u] = 1;  // u以下のノードの個数(u含む)
  for (int v : graph.at(u)) {
    if (v == parent) {
      continue;
    }
    // 行きがけ u --> v
    dfs_tree(dfs_tree, v, u);
    // 帰りがけ u <-- v
    // uの更新
    // child[u] += child[v];
  }
};
dfs_tree(dfs_tree, root, -1);
